@*@model IEnumerable<DFUNK.Models.Contact>*@
@model PagedList.IPagedList<DFUNK.Models.Contact>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Contacts";
}

<h2>Contacts</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@*@Html.Partial("_CompanyOrMembers")*@

@using (Html.BeginForm("Index", "Contacts", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        @*<th>
            @Html.DisplayNameFor(model => model.CompanyInfo.contactPerson)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VolunteerInfo.tshirtSize)
        </th>*@
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            @*@Html.DisplayNameFor(model => model.name)*@
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LastNAmeSortParm, currentFilter = ViewBag.CurrentFilter })
            @*@Html.DisplayNameFor(model => model.surname)*@
        </th>
        <th>
            @Html.DisplayName("Date of Birth")
            @*@Html.DisplayNameFor(model => model.dateOfBirth)*@
        </th>
        <th>
            @Html.DisplayName("Street")
            @*@Html.DisplayNameFor(model => model.street)*@
        </th>
        <th>
            @Html.DisplayName("Zip Code")
            @*@Html.DisplayNameFor(model => model.zipCode)*@
        </th>
        <th>
            @Html.DisplayName("City")
            @*@Html.DisplayNameFor(model => model.city)*@
        </th>
        <th>
            @Html.DisplayName("Phone Number")
            @*@Html.DisplayNameFor(model => model.phoneNr)*@
        </th>
        <th>
            @Html.DisplayName("Email")
            @*@Html.DisplayNameFor(model => model.email)*@
        </th>
        <th>
            @Html.DisplayName("Company")
            @*@Html.DisplayNameFor(model => model.company)*@
        </th>
        <th>
            @Html.DisplayName("Date of Registry")
            @*@Html.DisplayNameFor(model => model.registerDate)*@
        </th>
        <th>
            @Html.DisplayName("Member")
            @*@Html.DisplayNameFor(model => model.member)*@
        </th>
        <th>
            @Html.DisplayName("Stakeholder")
            @*@Html.DisplayNameFor(model => model.stakeholder)*@
        </th>
        <th>
            @Html.DisplayName("Volunteer")
            @*@Html.DisplayNameFor(model => model.volunteer)*@
        </th>
        <th>
            @Html.DisplayName("Internal Employee")
            @*@Html.DisplayNameFor(model => model.internalEmployee)*@
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        @*<td>
            @Html.DisplayFor(modelItem => item.CompanyInfo.contactPerson)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.VolunteerInfo.tshirtSize)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.surname)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.dateOfBirth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.street)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.zipCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.city)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.phoneNr)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.company)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.registerDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.member)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.stakeholder)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.volunteer)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.internalEmployee)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.contact_id }) |
            @Html.ActionLink("Details", "Details", new { id=item.contact_id })
            @*@Html.ActionLink("Delete", "Delete", new { id=item.contact_id })*@
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))