@model DFUNK.Models.Contact

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Contact</h4>
    <hr />
    <dl class="dl-horizontal">
        @{
            if (Model.company)
            {
                <dt>
                    @Html.DisplayNameFor(model => model.CompanyInfo.contactPerson)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CompanyInfo.contactPerson)
                </dd>
            }
        }  
        <dt>
            @Html.DisplayNameFor(model => model.VolunteerInfo.tshirtSize)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.VolunteerInfo.tshirtSize)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.surname)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.surname)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.dateOfBirth)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.dateOfBirth)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.street)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.street)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.zipCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.zipCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.city)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.city)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.phoneNr)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.phoneNr)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.company)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.company)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.registerDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.registerDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.member)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.member)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.stakeholder)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.stakeholder)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.volunteer)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.volunteer)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.internalEmployee)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.internalEmployee)
        </dd>
        <dt>
            @Html.DisplayName("Remove from Group")
        </dt>
        <dd>
            @using (Html.BeginForm("RemoveFromGroup", "Contacts", FormMethod.Post))
            {
                @*@Html.DisplayName("Companies:")
                    @Html.DropDownList("MembersOrCompanies", new SelectList(
            new List<Object>{
                           new { value = 1 , text = "Members"  },
                           new { value = 2 , text = "Companies" }
            },
            "value",
            "text",
            0))*@
                @Html.DropDownListFor(model => model.Group1, new SelectList(Model.Group1.ToList(), "group_id", "fullName"))
                @Html.HiddenFor(model => model.contact_id, new { id = Model.contact_id })
                
                <input type="submit" class="btn btn-default" value="Remove" />
            }
        </dd>
        <dt>
            @Html.DisplayName("Add to Group")
        </dt>
        <dd>
            @using (Html.BeginForm("AddToGroup", "Contacts", FormMethod.Post))
            {
                @*@Html.DisplayName("Companies:")
                        @Html.DropDownList("MembersOrCompanies", new SelectList(
                new List<Object>{
                               new { value = 1 , text = "Members"  },
                               new { value = 2 , text = "Companies" }
                },
                "value",
                "text",
                0))*@
            DFUNK.Models.DFUNK db = new DFUNK.Models.DFUNK();
            @Html.DropDownListFor(model => model.Group1, new SelectList(db.Group.ToList().Where(p => !Model.Group1.ToList().Any(p2 => p2.group_id == p.group_id)), "group_id", "fullName"))
                //@Html.DropDownListFor(model => model.Group1, new SelectList(Model.Group1.ToList(), "group_id", "fullName"))
                @Html.HiddenFor(model => model.contact_id, new { id = Model.contact_id })

                <input type="submit" class="btn btn-default" value="Add" />
            }
        </dd>



    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.contact_id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
